#!/bin/bash

mountBasedir="/repo/ISOs"
autofsConfigFile="/etc/auto.master.d/auto.cdrom"
labelPaths="$(find /dev/disk/by-label -type l)"
t="$(echo -ne '\t')"
scriptName=$(readlink -f $0)
scriptRoot=$(dirname $(readlink -f $0))

function log {
  echo "$@"
  logger "$@"
}

function deploy {
  [ -n "$1" ] || return 1
  [ -n "$2" ] && string="$2"
  basename=$(basename $1)
  if [ -f "$1" ]
  then
    if [[ "$(sha1sum ${basename} | cut -f1 -d' ')" == "$(sha1sum ${1} | cut -f1 -d' ')" ]]
    then
      echo "${basename} is already deployed."
      return 0
    else
      echo "${basename} checksum differs from repo. Updating."
    fi
  fi

    cp -v ${scriptRoot}/${basename} $1
}

deploy /etc/auto.master.d/cdrom.autofs
deploy /etc/udev/rules.d/cdrom.rules "#Detects new CDs and works with eject\nKERNEL==\"sr*\", ACTION==\"change\", RUN+=\"${scriptPath}\""

# Backup if config file present
if [ -f "${autofsConfigFile}" ]
then
  autofsConfigFileBak="${autofsConfigFile}.bak.$(date +%s)"
  log "Backing up: ${autofsConfigFile} to ${autofsConfigFileBak}"
  mv -v ${autofsConfigFile} ${autofsConfigFileBak}
fi

if [ -z "${labelPaths}" ]
then
  echo "No labels detected. Attach an ISO or put a CD in!"
  echo -ne "" >> ${autofsConfigFile}
  
fi

for label in ${labelPaths}
do
  labelBasename="$(echo -e $(basename $label))"
  labelBasenameClean="$(echo -ne ${labelBasename})"
  labelLink="$(readlink -f $label)"

    # Skip if not a CD or already mounted
  [[ "$labelLink" =~ ^/dev/sr[0-9]+$ ]]    || { log "Skipping $labelBasename,${t}not a CD" ; continue;}
  targetLine="\"${labelBasenameClean}\"${t}-fstype=iso9660,ro,nosuid,nodev${t}:\"${label}\""
  grep -qs "${targetLine}" ${autofsConfigFile} && { log "Skipping $labelBasename,${t}already in ${autofsConfigFile}" ; continue;}
  log "Adding autofs entry for ${labelBasename}"
  echo "$targetLine" >> ${autofsConfigFile}
done

log "Reloading autofs..."
systemctl reload autofs && { log "Done." ;} || { log "Failed!" ;}
